{
  "name": "titanium-sdk",
  "version": "1.0.0",
  "displayName": "Titanium",
  "description": "Intellisense, snippets, and integrated build tools for Titanium",
  "icon": "images/logo-titanium.png",
  "publisher": "TiDev",
  "bugs": {
    "url": "https://github.com/tidev/vscode-titanium/issues"
  },
  "keywords": [
    "titanium",
    "alloy"
  ],
  "categories": [
    "Extension Packs",
    "Programming Languages",
    "Snippets",
    "Debuggers",
    "Other"
  ],
  "homepage": "https://github.com/tidev/vscode-titanium",
  "galleryBanner": {
    "color": "#d22630",
    "theme": "dark"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/tidev/vscode-titanium.git"
  },
  "engines": {
    "vscode": "^1.56.0",
    "node": ">=14.16.0"
  },
  "activationEvents": [
    "*"
  ],
  "capabilities": {
    "untrustedWorkspaces": {
      "supported": false
    },
    "virtualWorkspaces": false
  },
  "license": "Apache 2.0",
  "main": "./out/extension",
  "contributes": {
    "debuggers": [
      {
        "type": "titanium",
        "label": "Titanium",
        "languages": [
          "javascript"
        ],
        "enableBreakpointsFor": {
          "languageIds": [
            "javascript"
          ]
        },
        "program": "./out/debugger/titaniumDebugger.js",
        "runtime": "node",
        "initialConfigurations": [
          {
            "name": "Launch on Android",
            "type": "titanium",
            "request": "launch",
            "platform": "android"
          },
          {
            "name": "Launch on iOS",
            "type": "titanium",
            "request": "launch",
            "platform": "ios"
          }
        ],
        "configurationSnippets": [
          {
            "label": "Titanium: Launch on Android Emulator",
            "description": "Configuration for launch app on Android emulator",
            "body": {
              "name": "Launch on Android emulator",
              "type": "titanium",
              "request": "launch",
              "platform": "android",
              "target": "emulator"
            }
          },
          {
            "label": "Titanium: Launch on Android Device",
            "description": "Configuration for launch app on Android device",
            "body": {
              "name": "Launch on Android device",
              "type": "titanium",
              "request": "launch",
              "platform": "android",
              "target": "device"
            }
          },
          {
            "label": "Titanium: Launch on iOS simulator",
            "description": "Configuration for launch app on iOS simulator",
            "body": {
              "name": "Launch on iOS simulator",
              "type": "titanium",
              "request": "launch",
              "platform": "ios",
              "target": "simulator"
            }
          },
          {
            "label": "Titanium: Launch on iOS device",
            "description": "Configuration for launch app on iOS device",
            "body": {
              "name": "Launch on iOS device",
              "type": "titanium",
              "request": "launch",
              "platform": "ios",
              "target": "device"
            }
          }
        ],
        "configurationAttributes": {
          "launch": {
            "required": [
              "platform"
            ],
            "properties": {
              "platform": {
                "type": "string",
                "description": "Platform to debug"
              },
              "projectDir": {
                "type": "string",
                "description": "Directory of the Titanium project to debug",
                "defaultValue": "[${workspaceFolder}](https://code.visualstudio.com/docs/editor/variables-reference#_predefined-variables)"
              },
              "port": {
                "type": "number",
                "description": "Port number to use for the debugger"
              },
              "preLaunchTask": {
                "type": "string",
                "description": "Name of the task to build the application"
              }
            }
          }
        }
      }
    ],
    "languages": [
      {
        "id": "alloy-tss",
        "aliases": [
          "Alloy Style (TSS)"
        ],
        "extensions": [
          ".tss"
        ],
        "configuration": "./tssConf.json"
      }
    ],
    "grammars": [
      {
        "language": "alloy-tss",
        "scopeName": "source.css.tss",
        "path": "./grammars/tss.JSON-tmLanguage.json"
      }
    ],
    "commands": [
      {
        "command": "titanium.create.application",
        "title": "Create application",
        "category": "Titanium",
        "description": "Create a new Titanium application project"
      },
      {
        "command": "titanium.create.keystore",
        "title": "Create keystore",
        "category": "Titanium"
      },
      {
        "command": "titanium.create.module",
        "title": "Create module",
        "category": "Titanium",
        "description": "Create a new Titanium module project"
      },
      {
        "command": "titanium.explorer.refresh",
        "title": "Refresh devices",
        "category": "Titanium",
        "icon": "$(refresh)"
      },
      {
        "command": "titanium.explorer.clearRecent",
        "title": "Clear recent builds",
        "category": "Titanium",
        "icon": "$(clear-all)"
      },
      {
        "command": "titanium.build.setLiveViewEnabled",
        "title": "Enable LiveView",
        "category": "Titanium",
        "icon": "$(sync-ignored)"
      },
      {
        "command": "titanium.build.setLiveViewDisabled",
        "title": "Disable LiveView",
        "category": "Titanium",
        "icon": "$(sync)"
      },
      {
        "command": "titanium.build.run",
        "title": "Build",
        "category": "Titanium",
        "icon": "$(play)",
        "description": "Build a Titanium project"
      },
      {
        "command": "titanium.build.debug",
        "title": "Debug",
        "category": "Titanium",
        "icon": "$(debug)",
        "description": "Debug a Titanium project"
      },
      {
        "command": "titanium.package.run",
        "title": "Package",
        "category": "Titanium",
        "icon": "$(package)",
        "description": "Package a Titanium project"
      },
      {
        "command": "titanium.build.stop",
        "title": "Stop",
        "category": "Titanium",
        "icon": "$(debug-stop)",
        "description": "Stop a running build or package process"
      },
      {
        "command": "titanium.build.setLogLevel",
        "title": "Set log level",
        "category": "Titanium"
      },
      {
        "command": "titanium.alloy.generate.controller",
        "title": "Generate Alloy controller",
        "category": "Titanium"
      },
      {
        "command": "titanium.alloy.generate.migration",
        "title": "Generate Alloy migration",
        "category": "Titanium"
      },
      {
        "command": "titanium.alloy.generate.model",
        "title": "Generate Alloy model",
        "category": "Titanium"
      },
      {
        "command": "titanium.alloy.generate.style",
        "title": "Generate Alloy style",
        "category": "Titanium"
      },
      {
        "command": "titanium.alloy.generate.view",
        "title": "Generate Alloy view",
        "category": "Titanium"
      },
      {
        "command": "titanium.alloy.generate.widget",
        "title": "Generate Alloy widget",
        "category": "Titanium"
      },
      {
        "command": "titanium.alloy.open.relatedView",
        "title": "Open related view",
        "category": "Titanium"
      },
      {
        "command": "titanium.alloy.open.relatedStyle",
        "title": "Open related style",
        "category": "Titanium"
      },
      {
        "command": "titanium.alloy.open.relatedController",
        "title": "Open related controller",
        "category": "Titanium"
      },
      {
        "command": "titanium.alloy.open.allRelatedFiles",
        "title": "Open related files",
        "category": "Titanium"
      },
      {
        "command": "titanium.task.generate",
        "title": "Generate task",
        "category": "Titanium"
      },
      {
        "command": "titanium.updates.openReleaseNotes",
        "title": "Open release notes",
        "category": "Titanium",
        "icon": "$(link-external)"
      },
      {
        "command": "titanium.updates.checkAll",
        "title": "Check For Updates",
        "category": "Titanium",
        "icon": "$(refresh)"
      },
      {
        "command": "titanium.updates.installAll",
        "title": "Install All Updates",
        "category": "Titanium"
      },
      {
        "command": "titanium.updates.select",
        "title": "Select Updates",
        "category": "Titanium"
      },
      {
        "command": "titanium.updates.install",
        "title": "Install Update",
        "category": "Titanium"
      },
      {
        "command": "titanium.clean",
        "title": "Clean project",
        "category": "Titanium"
      },
      {
        "command": "titanium.updates.reveal",
        "title": "Reveal Updates",
        "category": "Titanium"
      },
      {
        "command": "titanium.import.settings",
        "title": "Import settings from legacy Titanium extension",
        "category": "Titanium"
      },
      {
        "command": "titanium.import.keystore",
        "title": "Import Keystore data from legacy Titanium extension",
        "category": "Titanium"
      }
    ],
    "keybindings": [
      {
        "command": "titanium.build.run",
        "key": "ctrl+alt+enter",
        "mac": "cmd+alt+enter"
      },
      {
        "command": "titanium.build.stop",
        "key": "ctrl+alt+.",
        "mac": "cmd+alt+."
      },
      {
        "command": "titanium.alloy.open.relatedView",
        "key": "ctrl+alt+v",
        "mac": "cmd+alt+v"
      },
      {
        "command": "titanium.alloy.open.relatedStyle",
        "key": "ctrl+alt+s",
        "mac": "cmd+alt+s"
      },
      {
        "command": "titanium.alloy.open.relatedController",
        "key": "ctrl+alt+x",
        "mac": "cmd+alt+x"
      },
      {
        "command": "titanium.alloy.open.allRelatedFiles",
        "key": "ctrl+alt+a",
        "mac": "cmd+alt+a"
      }
    ],
    "snippets": [
      {
        "language": "javascript",
        "path": "./snippets/titanium.json",
        "description": "Snippets for Titanium development"
      },
      {
        "language": "javascript",
        "path": "./snippets/alloy.json",
        "description": "Snippets for Alloy development"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Titanium",
      "properties": {
        "titanium.android.keystoreAlias": {
          "type": "string",
          "default": null,
          "description": "Keystore alias used for packaging Android applications"
        },
        "titanium.android.keystorePath": {
          "type": "string",
          "default": null,
          "description": "Path to keystore used for packaging Android applications"
        },
        "titanium.build.liveview": {
          "type": "boolean",
          "default": true,
          "description": "Whether to enable LiveView when building applications",
          "scope": "window"
        },
        "titanium.codeTemplates.jsFunction": {
          "type": "string",
          "default": "\\nfunction ${text}(e){\\n}\\n",
          "description": "Event handler function template"
        },
        "titanium.codeTemplates.tssClass": {
          "type": "string",
          "default": "\\n'.${text}': {\\n}\\n",
          "description": "Style class (.) template"
        },
        "titanium.codeTemplates.tssId": {
          "type": "string",
          "default": "\\n'#${text}': {\\n}\\n",
          "description": "Style ID (#) template"
        },
        "titanium.codeTemplates.tssTag": {
          "type": "string",
          "default": "\\n'${text}': {\\n}\\n",
          "description": "Style tag template"
        },
        "titanium.general.defaultCreationDirectory": {
          "type": "string",
          "description": "Default directory to use when creating projects",
          "default": null
        },
        "titanium.general.displayBuildCommandInConsole": {
          "type": "boolean",
          "default": true,
          "description": "The executed build command is written to the output channel to aid debugging. This will include password arguments."
        },
        "titanium.general.logLevel": {
          "type": "string",
          "default": "info",
          "description": "Logging level for commands being run",
          "enum": [
            "debug",
            "error",
            "info",
            "trace",
            "warn"
          ]
        },
        "titanium.general.updateFrequency": {
          "type": "string",
          "default": "1 day",
          "description": "Controls the frequency for how often to show an alert if there are updates available. Updates can always be viewed in the Titanium activity pane. Accepts values in time formats like 60 minutes, 12 hours, 7 days etc."
        },
        "titanium.general.useTerminalForBuild": {
          "type": "boolean",
          "default": true,
          "description": "When true build/package commands will be run using the integrated terminal as opposed to using an output channel."
        },
        "titanium.package.distributionOutputDirectory": {
          "type": "string",
          "default": "dist",
          "description": "Output directory for package builds."
        },
        "titanium.project.defaultI18nLanguage": {
          "type": "string",
          "default": "en",
          "description": "Default language to use for i18n autocomplete."
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "titanium",
          "title": "Titanium",
          "icon": "images/titanium.svg"
        }
      ]
    },
    "views": {
      "titanium": [
        {
          "id": "titanium.view.welcome",
          "name": "Get Started",
          "when": "!isWorkspaceTrusted || !titanium:enabled"
        },
        {
          "id": "titanium.view.buildExplorer",
          "name": "Build",
          "when": "isWorkspaceTrusted && titanium:enabled"
        },
        {
          "id": "titanium.view.helpExplorer",
          "name": "Help and Feedback",
          "when": "isWorkspaceTrusted"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "titanium.view.welcome",
        "contents": "Titanium tooling not installed, click below to install it.\nThis will not install any platform specific tooling. To install the required platform tooling please visit [the Android](https://titaniumsdk.com/guide/Titanium_SDK/Titanium_SDK_Getting_Started/Installation_and_Configuration/Installing_Platform_SDKs/Installing_the_Android_SDK.html) or [iOS documentation](https://titaniumsdk.com/guide/Titanium_SDK/Titanium_SDK_Getting_Started/Installation_and_Configuration/Installing_Platform_SDKs/Installing_the_iOS_SDK.html)\n[Install Tooling](command:titanium.updates.select)",
        "when": "titanium:toolingMissing"
      },
      {
        "view": "titanium.view.welcome",
        "contents": "To use the Titanium extension you must have a Titanium project open\n[Open Project](command:workbench.action.addRootFolder)\nYou can also create a new Application or Module project\n[Create App](command:titanium.create.application)\n[Create Module](command:titanium.create.module)",
        "when": "titanium:notProject"
      },
      {
        "view": "titanium.view.welcome",
        "contents": "Please trust this workspace to use the Titanium extension.\n[Manage Workspace Trust](command:workbench.trust.manage)\n[Learn more about Workspace Trust](https://aka.ms/vscode-workspace-trust)",
        "when": "!isTrustedWorkspace"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "titanium.create.application",
          "when": "isWorkspaceTrusted"
        },
        {
          "command": "titanium.create.keystore",
          "when": "isWorkspaceTrusted"
        },
        {
          "command": "titanium.create.module",
          "when": "isWorkspaceTrusted"
        },
        {
          "command": "titanium.explorer.refresh",
          "when": "isWorkspaceTrusted && titanium:enabled"
        },
        {
          "command": "titanium.explorer.clearRecent",
          "when": "false"
        },
        {
          "command": "titanium.build.setLiveViewEnabled",
          "when": "isWorkspaceTrusted && titanium:enabled"
        },
        {
          "command": "titanium.build.setLiveViewDisabled",
          "when": "isWorkspaceTrusted && titanium:enabled"
        },
        {
          "command": "titanium.build.run",
          "when": "isWorkspaceTrusted && titanium:enabled"
        },
        {
          "command": "titanium.package.run",
          "when": "isWorkspaceTrusted && titanium:enabled"
        },
        {
          "command": "titanium.build.stop",
          "when": "isWorkspaceTrusted && titanium:enabled"
        },
        {
          "command": "titanium.build.setLogLevel",
          "when": "isWorkspaceTrusted && titanium:enabled"
        },
        {
          "command": "titanium.alloy.open.relatedView",
          "when": "isWorkspaceTrusted && titanium:enabled"
        },
        {
          "command": "titanium.alloy.open.relatedStyle",
          "when": "isWorkspaceTrusted && titanium:enabled"
        },
        {
          "command": "titanium.alloy.open.relatedController",
          "when": "isWorkspaceTrusted && titanium:enabled"
        },
        {
          "command": "titanium.alloy.open.allRelatedFiles",
          "when": "isWorkspaceTrusted && titanium:enabled"
        },
        {
          "command": "titanium.alloy.generate.controller",
          "when": "isWorkspaceTrusted && titanium:enabled"
        },
        {
          "command": "titanium.alloy.generate.migration",
          "when": "isWorkspaceTrusted && titanium:enabled"
        },
        {
          "command": "titanium.alloy.generate.model",
          "when": "isWorkspaceTrusted && titanium:enabled"
        },
        {
          "command": "titanium.alloy.generate.style",
          "when": "isWorkspaceTrusted && titanium:enabled"
        },
        {
          "command": "titanium.alloy.generate.view",
          "when": "isWorkspaceTrusted && titanium:enabled"
        },
        {
          "command": "titanium.alloy.generate.widget",
          "when": "isWorkspaceTrusted && titanium:enabled"
        },
        {
          "command": "titanium.updates.openReleaseNotes",
          "when": "false"
        },
        {
          "command": "titanium.updates.install",
          "when": "false"
        },
        {
          "command": "titanium.clean",
          "when": "isWorkspaceTrusted && titanium:enabled"
        },
        {
          "command": "titanium.build.debug",
          "when": "false"
        },
        {
          "command": "titanium.explorer.refresh",
          "when": "false"
        },
        {
          "command": "titanium.updates.checkAll",
          "when": "isWorkspaceTrusted"
        },
        {
          "command": "titanium.updates.installAll",
          "when": "isWorkspaceTrusted"
        },
        {
          "command": "titanium.updates.select",
          "when": "isWorkspaceTrusted"
        },
        {
          "command": "titanium.updates.reveal",
          "when": "false"
        },
        {
          "command": "titanium.task.generate",
          "when": "false"
        }
      ],
      "editor/context": [
        {
          "command": "titanium.alloy.open.relatedController",
          "when": "editorLangId =~ /(xml|alloy-tss)/"
        },
        {
          "command": "titanium.alloy.open.relatedStyle",
          "when": "editorLangId =~ /(javascript|xml)/"
        },
        {
          "command": "titanium.alloy.open.relatedView",
          "when": "editorLangId =~ /(alloy-tss|javascript)/"
        },
        {
          "command": "titanium.alloy.open.allRelatedFiles",
          "when": "editorLangId =~ /(alloy-tss|javascript|xml)/"
        }
      ],
      "explorer/context": [
        {
          "command": "titanium.alloy.generate.controller",
          "group": "2_workspace",
          "when": "isWorkspaceTrusted && titanium:enabled"
        },
        {
          "command": "titanium.alloy.generate.model",
          "group": "2_workspace",
          "when": "isWorkspaceTrusted && titanium:enabled"
        },
        {
          "command": "titanium.alloy.generate.style",
          "group": "2_workspace",
          "when": "isWorkspaceTrusted && titanium:enabled"
        },
        {
          "command": "titanium.alloy.generate.view",
          "group": "2_workspace",
          "when": "isWorkspaceTrusted && titanium:enabled"
        }
      ],
      "view/title": [
        {
          "command": "titanium.build.run",
          "when": "view == titanium.view.buildExplorer",
          "group": "navigation@2"
        },
        {
          "command": "titanium.build.stop",
          "when": "view == titanium.view.buildExplorer && titanium:build:running",
          "group": "navigation@2"
        },
        {
          "command": "titanium.package.run",
          "when": "view == titanium.view.buildExplorer",
          "group": "navigation@2"
        },
        {
          "command": "titanium.build.setLiveViewEnabled",
          "when": "view == titanium.view.buildExplorer && !config.titanium.build.liveview",
          "group": "navigation@3"
        },
        {
          "command": "titanium.build.setLiveViewDisabled",
          "when": "view == titanium.view.buildExplorer && config.titanium.build.liveview",
          "group": "navigation@3"
        },
        {
          "command": "titanium.explorer.refresh",
          "when": "view == titanium.view.buildExplorer",
          "group": "2_workspace"
        },
        {
          "command": "titanium.build.setLogLevel",
          "group": "2_workspace",
          "when": "view == titanium.view.buildExplorer"
        },
        {
          "command": "titanium.clean",
          "group": "2_workspace",
          "when": "view == titanium.view.buildExplorer"
        },
        {
          "command": "titanium.updates.installAll",
          "group": "2_workspace",
          "when": "view == titanium.view.helpExplorer && titanium:update:hasUpdates"
        },
        {
          "command": "titanium.updates.select",
          "group": "2_workspace",
          "when": "view == titanium.view.helpExplorer && titanium:update:hasUpdates"
        }
      ],
      "view/item/context": [
        {
          "command": "titanium.package.run",
          "when": "view == titanium.view.buildExplorer && viewItem =~ /PlatformNode|DistributeNode/"
        },
        {
          "command": "titanium.package.run",
          "when": "view == titanium.view.buildExplorer && viewItem =~ /PlatformNode|DistributeNode/",
          "group": "inline"
        },
        {
          "command": "titanium.build.run",
          "when": "view == titanium.view.buildExplorer && viewItem == DeviceNode",
          "group": "inline"
        },
        {
          "command": "titanium.build.debug",
          "when": "view == titanium.view.buildExplorer && viewItem == DeviceNode",
          "group": "inline"
        },
        {
          "command": "titanium.build.run",
          "when": "view == titanium.view.buildExplorer && viewItem =~ /PlatformNode|TargetNode|OSVerNode|DeviceNode/"
        },
        {
          "command": "titanium.build.debug",
          "when": "view == titanium.view.buildExplorer && viewItem == DeviceNode"
        },
        {
          "command": "titanium.updates.openReleaseNotes",
          "when": "view == titanium.view.helpExplorer && viewItem == UpdateNode",
          "group": "inline"
        },
        {
          "command": "titanium.updates.install",
          "when": "view == titanium.view.helpExplorer && viewItem == UpdateNode"
        },
        {
          "command": "titanium.updates.checkAll",
          "when": "view == titanium.view.helpExplorer && viewItem == UpdatesNode",
          "group": "inline"
        },
        {
          "command": "titanium.task.generate",
          "when": "view == titanium.view.buildExplorer && viewItem =~ /DeviceNode|DistributeNode/"
        },
        {
          "command": "titanium.explorer.clearRecent",
          "when": "view == titanium.view.buildExplorer && viewItem == RecentNode",
          "group": "inline"
        }
      ]
    },
    "taskDefinitions": [
      {
        "type": "titanium-build",
        "properties": {
          "titaniumBuild": {
            "description": "Properties used to configure the build",
            "properties": {
              "android": {
                "description": "Properties used to configure Android builds",
                "properties": {}
              },
              "deployType": {
                "description": "Deploy Type to be used when building",
                "type": "string",
                "enum": [
                  "test",
                  "development"
                ]
              },
              "deviceId": {
                "description": "ID or UDID for the device or simulator",
                "type": "string"
              },
              "extraArguments": {
                "type": "array",
                "description": "Extra arguments to be used in the build"
              },
              "ios": {
                "description": "Properties used to configure iOS builds",
                "properties": {
                  "provisioningProfile": {
                    "description": "Provisioning Profile UUID to use when signing device builds",
                    "type": "string"
                  },
                  "certificate": {
                    "description": "Certificate name to use when signing device builds",
                    "type": "string"
                  },
                  "simulatorVersion": {
                    "description": "Simulator version use when performing a simulator build",
                    "type": "string"
                  }
                }
              },
              "platform": {
                "type": "string",
                "description": "Platform to build for",
                "enum": [
                  "android",
                  "ios"
                ]
              },
              "projectType": {
                "type": "string",
                "description": "Project type to be built",
                "enum": [
                  "app",
                  "module"
                ]
              },
              "target": {
                "type": "string",
                "description": "Target to build for"
              }
            }
          }
        }
      },
      {
        "type": "titanium-package",
        "properties": {
          "titaniumBuild": {
            "description": "Properties used to configure the build",
            "properties": {
              "android": {
                "description": "Properties used to configure Android builds",
                "properties": {
                  "keystore": {
                    "description": "Keystore configuration",
                    "properties": {
                      "alias": {
                        "description": "Alias for the keystore",
                        "type": "string"
                      },
                      "location": {
                        "description": "Path of the keystore to be used, must be a full path",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "extraArguments": {
                "type": "array",
                "description": "Extra arguments to be used in the build"
              },
              "ios": {
                "description": "Properties used to configure iOS builds",
                "properties": {
                  "provisioningProfile": {
                    "description": "Provisioning Profile UUID to be used",
                    "type": "string"
                  },
                  "certificate": {
                    "description": "Certificate name to be used",
                    "type": "string"
                  }
                }
              },
              "outputDirectory": {
                "type": "string",
                "description": "Output directory for the built application"
              },
              "platform": {
                "type": "string",
                "description": "Platform to build for",
                "enum": [
                  "android",
                  "ios"
                ]
              },
              "target": {
                "type": "string",
                "description": "Target to build for"
              },
              "projectType": {
                "type": "string",
                "description": "Project type to be built",
                "enum": [
                  "app",
                  "module"
                ]
              }
            }
          }
        }
      }
    ],
    "problemMatchers": [
      {
        "name": "ti-app-launch",
        "label": "Detects an app launch",
        "owner": "titanium",
        "source": "titanium",
        "applyTo": "allDocuments",
        "pattern": {
          "regexp": "__________"
        },
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "__________"
          },
          "endsPattern": {
            "regexp": "Start (application|simulator) log"
          }
        }
      }
    ]
  },
  "lint-staged": {
    "*.ts": "npm run lint",
    "*.js": "npm run lint"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "scripts": {
    "commit": "git-cz",
    "compile": "rimraf out/ && tsc -p ./",
    "generate-docs": "node ./scripts/render.js",
    "lint": "eslint src/ scripts/",
    "release": "npm run generate-docs && standard-version && npx --yes vsce@latest package",
    "test": "cross-env COVERAGE=1 node ./out/test/unit/runTest.js",
    "test:integration": "npm run compile && node ./out/test/integration/runTests.js",
    "test:smoke": "npm run compile && cross-env SMOKE=1 node ./out/test/integration/runTests.js",
    "vscode:prepublish": "npm run compile",
    "pretest": "npm run compile",
    "watch": "tsc -watch -p ./",
    "postinstall": "husky install",
    "prepublishOnly": "pinst --disable",
    "postpublish": "pinst --enable"
  },
  "devDependencies": {
    "@commitlint/cli": "^16.1.0",
    "@commitlint/config-conventional": "^16.0.0",
    "@seadub/danger-plugin-dependencies": "^1.0.0",
    "@seadub/danger-plugin-eslint": "^2.0.0",
    "@seadub/danger-plugin-junit": "^0.3.0",
    "@types/chai": "^4.3.0",
    "@types/chai-as-promised": "^7.1.4",
    "@types/fs-extra": "^9.0.13",
    "@types/glob": "^7.2.0",
    "@types/got": "^9.6.12",
    "@types/klaw-sync": "^6.0.1",
    "@types/mocha": "^9.0.0",
    "@types/ms": "^0.7.31",
    "@types/node": "14.14.31",
    "@types/semver": "^7.3.9",
    "@types/sinon": "^10.0.11",
    "@types/sinon-chai": "^3.2.8",
    "@types/tmp": "^0.2.3",
    "@types/uuid": "^8.3.4",
    "@types/vscode": "1.56.0",
    "@types/which": "^2.0.1",
    "@types/xml2js": "^0.4.9",
    "@typescript-eslint/eslint-plugin": "^4.33.0",
    "@typescript-eslint/parser": "^4.33.0",
    "@vscode/test-electron": "^2.1.2",
    "chai": "^4.3.6",
    "chai-as-promised": "^7.1.1",
    "commitizen": "^4.2.4",
    "cross-env": "^7.0.3",
    "cz-conventional-changelog": "^3.3.0",
    "danger": "^11.0.2",
    "ejs": "^3.1.6",
    "eslint": "^7.32.0",
    "eslint-config-axway": "^6.0.2",
    "eslint-plugin-chai-friendly": "^0.7.2",
    "eslint-plugin-mocha": "^9.0.0",
    "glob": "^7.2.0",
    "husky": "^7.0.4",
    "lint-staged": "^13.0.2",
    "mocha": "^9.2.0",
    "mocha-jenkins-reporter": "^0.4.7",
    "mocha-multi-reporters": "^1.5.1",
    "nyc": "^15.1.0",
    "pinst": "^2.1.6",
    "rimraf": "^3.0.2",
    "sinon": "^13.0.1",
    "sinon-chai": "^3.7.0",
    "standard-version": "^9.3.2",
    "tmp": "^0.2.1",
    "typescript": "^4.5.5",
    "vscode-extension-tester": "^4.2.3"
  },
  "dependencies": {
    "@awam/remotedebug-ios-webkit-adapter": "^0.4.3",
    "detect-indent": "^6.1.0",
    "find-up": "^5.0.0",
    "fs-extra": "^10.0.0",
    "get-port": "^5.1.1",
    "got": "^11.8.2",
    "jsonc-parser": "^3.0.0",
    "klaw-sync": "^6.0.0",
    "ms": "^2.1.3",
    "semver": "^7.3.5",
    "source-map": "^0.7.3",
    "titanium-editor-commons": "^2.0.0",
    "uuid": "^8.3.2",
    "vscode-chrome-debug-core": "^6.8.11",
    "vscode-debugadapter": "^1.51.0",
    "vscode-wizard": "^0.2.20",
    "which": "^2.0.2",
    "xml2js": "^0.4.23"
  }
}
