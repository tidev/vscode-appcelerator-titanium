{
  "name": "vscode-titanium",
  "version": "0.14.0",
  "displayName": "Titanium",
  "description": "Intellisense, snippets, and integrated build tools for Titanium",
  "icon": "images/logo-titanium.png",
  "publisher": "Axway",
  "bugs": {
    "url": "https://github.com/appcelerator/vscode-appcelerator-titanium/issues"
  },
  "keywords": [
    "axway",
    "titanium",
    "appcelerator",
    "alloy"
  ],
  "categories": [
    "Extension Packs",
    "Programming Languages",
    "Snippets",
    "Debuggers",
    "Other"
  ],
  "homepage": "https://github.com/appcelerator/vscode-appcelerator-titanium",
  "galleryBanner": {
    "color": "#d22630",
    "theme": "dark"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/appcelerator/vscode-appcelerator-titanium.git"
  },
  "engines": {
    "vscode": "^1.56.0",
    "node": ">=14.16.0"
  },
  "activationEvents": [
    "*"
  ],
  "capabilities": {
    "untrustedWorkspaces": {
      "supported": false
    },
    "virtualWorkspaces": false
  },
  "license": "Apache 2.0",
  "main": "./out/extension",
  "contributes": {
    "commands": [
      {
        "command": "titanium-legacy.exportSettings",
        "title": "Export settings",
        "description": "Export settings to the new TiDev Titanium extension",
        "category": "Titanium (Legacy)"
      },
      {
        "command": "titanium-legacy.installNewExtension",
        "title": "Install TiDev Extension",
        "description": "Install the new TiDev Titanium extension",
        "category": "Titanium (Legacy)"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Appcelerator Titanium",
      "properties": {
        "titanium.android.keystoreAlias": {
          "type": "string",
          "default": null,
          "description": "Keystore alias used for packaging Android applications"
        },
        "titanium.android.keystorePath": {
          "type": "string",
          "default": null,
          "description": "Path to keystore used for packaging Android applications"
        },
        "titanium.build.liveview": {
          "type": "boolean",
          "default": true,
          "description": "Whether to enable LiveView when building applications",
          "scope": "window"
        },
        "titanium.codeTemplates.jsFunction": {
          "type": "string",
          "default": "\\nfunction ${text}(e){\\n}\\n",
          "description": "Event handler function template"
        },
        "titanium.codeTemplates.tssClass": {
          "type": "string",
          "default": "\\n'.${text}': {\\n}\\n",
          "description": "Style class (.) template"
        },
        "titanium.codeTemplates.tssId": {
          "type": "string",
          "default": "\\n'#${text}': {\\n}\\n",
          "description": "Style ID (#) template"
        },
        "titanium.codeTemplates.tssTag": {
          "type": "string",
          "default": "\\n'${text}': {\\n}\\n",
          "description": "Style tag template"
        },
        "titanium.general.defaultCreationDirectory": {
          "type": "string",
          "description": "Default directory to use when creating projects",
          "default": null
        },
        "titanium.general.displayBuildCommandInConsole": {
          "type": "boolean",
          "default": true,
          "description": "The executed build command is written to the output channel to aid debugging. This will include password arguments."
        },
        "titanium.general.logLevel": {
          "type": "string",
          "default": "info",
          "description": "Logging level for commands being run",
          "enum": [
            "debug",
            "error",
            "info",
            "trace",
            "warn"
          ]
        },
        "titanium.general.updateFrequency": {
          "type": "string",
          "default": "1 day",
          "description": "Controls the frequency for how often to show an alert if there are updates available. Updates can always be viewed in the Titanium activity pane. Accepts values in time formats like 60 minutes, 12 hours, 7 days etc."
        },
        "titanium.general.useTerminalForBuild": {
          "type": "boolean",
          "default": true,
          "description": "When true build/package commands will be run using the integrated terminal as opposed to using an output channel."
        },
        "titanium.package.distributionOutputDirectory": {
          "type": "string",
          "default": "dist",
          "description": "Output directory for package builds."
        },
        "titanium.project.defaultI18nLanguage": {
          "type": "string",
          "default": "en",
          "description": "Default language to use for i18n autocomplete."
        }
      }
    },
    "walkthroughs": [
      {
        "id": "migrate",
        "title": "Titanium",
        "description": "Helps migrate from the Axway Titanium extension to the TiDev Titanium extension",
        "steps": [
          {
            "id": "installNew",
            "title": "Install",
            "description": "Lets install the new extension.\n[Install](command:titanium-legacy.installNewExtension)",
            "completionEvents": [
              "extensionInstalled:TiDev.vscode-titanium"
            ],
            "media": {
              "markdown": "resources/empty.md"
            }
          },
          {
            "id": "exportSettings",
            "title": "Export Settings",
            "description": "Migrate your settings over to the new extension.\n[Export](command:titanium-legacy.exportSettings)",
            "media": {
              "markdown": "resources/empty.md"
            }
          },
          {
            "id": "exportKeystore",
            "title": "Export Keystore data",
            "description": "Select the keystores that you wish to migrate your keystore data over for.\n[Select Keystore](command:titanium-legacy.exportKeystore)",
            "media": {
              "markdown": "resources/empty.md"
            }
          },
          {
            "id": "uninstall",
            "title": "Uninstall",
            "description": "Uninstall the legacy extension. This requires you manually uninstall the extension.\n[Uninstall](command:titanium-legacy.uninstall)",
            "media": {
              "markdown": "resources/empty.md"
            }
          }
        ]
      }
    ]
  },
  "lint-staged": {
    "*.ts": "npm run lint",
    "*.js": "npm run lint"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "scripts": {
    "commit": "git-cz",
    "compile": "rimraf out/ && tsc -p ./",
    "generate-docs": "node ./scripts/render.js",
    "lint": "eslint src/ scripts/",
    "release": "npm run generate-docs && standard-version && npx --yes vsce@latest package",
    "test": "cross-env COVERAGE=1 node ./out/test/unit/runTest.js",
    "test:integration": "npm run compile && node ./out/test/integration/runTests.js",
    "test:smoke": "npm run compile && cross-env SMOKE=1 node ./out/test/integration/runTests.js",
    "vscode:prepublish": "npm run compile",
    "pretest": "npm run compile",
    "watch": "tsc -watch -p ./",
    "postinstall": "husky install",
    "prepublishOnly": "pinst --disable",
    "postpublish": "pinst --enable"
  },
  "devDependencies": {
    "@commitlint/cli": "^16.1.0",
    "@commitlint/config-conventional": "^16.0.0",
    "@seadub/danger-plugin-dependencies": "^1.0.0",
    "@seadub/danger-plugin-eslint": "^2.0.0",
    "@seadub/danger-plugin-junit": "^0.3.0",
    "@types/chai": "^4.3.0",
    "@types/chai-as-promised": "^7.1.4",
    "@types/fs-extra": "^9.0.13",
    "@types/glob": "^7.2.0",
    "@types/got": "^9.6.12",
    "@types/klaw-sync": "^6.0.1",
    "@types/mocha": "^9.0.0",
    "@types/ms": "^0.7.31",
    "@types/node": "14.14.31",
    "@types/semver": "^7.3.9",
    "@types/sinon": "^10.0.11",
    "@types/sinon-chai": "^3.2.8",
    "@types/tmp": "^0.2.3",
    "@types/uuid": "^8.3.4",
    "@types/vscode": "1.56.0",
    "@types/which": "^2.0.1",
    "@types/xml2js": "^0.4.9",
    "@typescript-eslint/eslint-plugin": "^4.33.0",
    "@typescript-eslint/parser": "^4.33.0",
    "@vscode/test-electron": "^2.1.2",
    "chai": "^4.3.6",
    "chai-as-promised": "^7.1.1",
    "commitizen": "^4.2.4",
    "cross-env": "^7.0.3",
    "cz-conventional-changelog": "^3.3.0",
    "danger": "^11.0.2",
    "ejs": "^3.1.6",
    "eslint": "^7.32.0",
    "eslint-config-axway": "^6.0.2",
    "eslint-plugin-chai-friendly": "^0.7.2",
    "eslint-plugin-mocha": "^9.0.0",
    "glob": "^7.2.0",
    "husky": "^7.0.4",
    "lint-staged": "^12.3.3",
    "mocha": "^9.2.0",
    "mocha-jenkins-reporter": "^0.4.7",
    "mocha-multi-reporters": "^1.5.1",
    "nyc": "^15.1.0",
    "pinst": "^2.1.6",
    "rimraf": "^3.0.2",
    "sinon": "^13.0.1",
    "sinon-chai": "^3.7.0",
    "standard-version": "^9.3.2",
    "tmp": "^0.2.1",
    "typescript": "^4.5.5",
    "vscode-extension-tester": "^4.2.3"
  },
  "dependencies": {
    "@awam/remotedebug-ios-webkit-adapter": "^0.4.3",
    "detect-indent": "^6.1.0",
    "find-up": "^5.0.0",
    "fs-extra": "^10.0.0",
    "get-port": "^5.1.1",
    "got": "^11.8.2",
    "jsonc-parser": "^3.0.0",
    "klaw-sync": "^6.0.0",
    "ms": "^2.1.3",
    "semver": "^7.3.5",
    "source-map": "^0.7.3",
    "titanium-editor-commons": "^2.0.0",
    "uuid": "^8.3.2",
    "vscode-chrome-debug-core": "^6.8.11",
    "vscode-debugadapter": "^1.51.0",
    "vscode-wizard": "^0.2.20",
    "which": "^2.0.2",
    "xml2js": "^0.4.23"
  }
}
